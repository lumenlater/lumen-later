name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy-contracts:
    name: Deploy Contracts to Testnet
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          
      - name: Install Soroban CLI
        run: |
          cargo install soroban-cli
          
      - name: Build contracts
        run: |
          cd contracts
          cargo build --release --target wasm32-unknown-unknown
          
      - name: Deploy to testnet
        env:
          DEPLOYER_SECRET: ${{ secrets.DEPLOYER_SECRET }}
          SOROBAN_RPC_URL: ${{ secrets.SOROBAN_RPC_URL }}
          SOROBAN_NETWORK_PASSPHRASE: ${{ secrets.SOROBAN_NETWORK_PASSPHRASE }}
          USDC_CONTRACT_ID: ${{ secrets.USDC_CONTRACT_ID }}
        run: |
          ./scripts/localnet.sh
          
      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-addresses
          path: .env.local

  deploy-web:
    name: Deploy Web App
    runs-on: ubuntu-latest
    needs: deploy-contracts
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download deployment addresses
        uses: actions/download-artifact@v3
        with:
          name: deployment-addresses
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_NETWORK: testnet
          NEXT_PUBLIC_RPC_URL: ${{ secrets.SOROBAN_RPC_URL }}
          
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./apps/web